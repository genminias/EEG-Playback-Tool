{"version":3,"sources":["../node_modules/@neurosity/notion/dist/browser sync","services/notion.js","pages/Devices.js","components/Loading.js","components/LoginForm.js","components/Footer.js","pages/Login.js","pages/Logout.js","components/Status.js","components/Nav.js","pages/Calm.js","App.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","notion","Notion","autoSelectDevice","initialState","selectedDevice","status","user","loadingUser","NotionContext","createContext","useNotion","useContext","ProvideNotion","children","notionProvider","useLocalStorage","lastSelectedDeviceId","setLastSelectedDeviceId","useState","state","setState","setSelectedDevice","useCallback","useEffect","selectDevice","devices","find","device","deviceId","subscription","subscribe","unsubscribe","onAuthStateChanged","sub","onDeviceChange","logoutNotion","Promise","logout","then","useProvideNotion","Provider","value","Devices","setDevices","draftDeviceId","setDraftDeviceId","loading","setLoading","submitting","setSubmitting","error","setError","getDevices","length","catch","message","finally","className","onSubmit","event","preventDefault","navigate","name","disabled","onChange","target","map","key","deviceNickname","modelName","type","Loading","LoginForm","onLogin","footerComponent","email","setEmail","password","setPassword","Footer","href","rel","Login","isLoggingIn","setIsLoggingIn","resetForm","useEffectOnce","a","login","Logout","statesLabels","booting","shuttingOff","updating","online","offline","stateColors","Status","charging","battery","sleepMode","to","title","role","aria-label","style","background","getStatusColor","ChargingIcon","SleepModeIcon","Nav","onClick","Calm","calm","setCalm","calmScore","Math","trunc","probability","App","Routes","path","render","document","getElementById"],"mappings":"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","file":"static/js/main.582f19db.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 28;","import React, { useContext, createContext } from \"react\";\nimport { useState, useEffect, useCallback } from \"react\";\nimport { Notion } from \"@neurosity/notion\";\nimport useLocalStorage from \"react-use/lib/useLocalStorage\";\n\nexport const notion = new Notion({\n  autoSelectDevice: false\n});\n\nconst initialState = {\n  selectedDevice: null,\n  status: null,\n  user: null,\n  loadingUser: true\n};\n\nexport const NotionContext = createContext();\n\nexport const useNotion = () => {\n  return useContext(NotionContext);\n};\n\nexport function ProvideNotion({ children }) {\n  const notionProvider = useProvideNotion();\n\n  return (\n    <NotionContext.Provider value={notionProvider}>\n      {children}\n    </NotionContext.Provider>\n  );\n}\n\nfunction useProvideNotion() {\n  const [\n    lastSelectedDeviceId,\n    setLastSelectedDeviceId\n  ] = useLocalStorage(\"deviceId\");\n\n  const [state, setState] = useState({\n    ...initialState\n  });\n\n  const { user, selectedDevice } = state;\n\n  const setSelectedDevice = useCallback((selectedDevice) => {\n    setState((state) => ({\n      ...state,\n      selectedDevice\n    }));\n  }, []);\n\n  useEffect(() => {\n    if (user && !selectedDevice) {\n      notion.selectDevice((devices) =>\n        lastSelectedDeviceId\n          ? devices.find(\n              (device) => device.deviceId === lastSelectedDeviceId\n            )\n          : devices[0]\n      );\n    }\n  }, [user, lastSelectedDeviceId, selectedDevice]);\n\n  useEffect(() => {\n    if (!selectedDevice) {\n      return;\n    }\n\n    const subscription = notion.status().subscribe((status) => {\n      setState((state) => ({ ...state, status }));\n    });\n\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, [selectedDevice]);\n\n  useEffect(() => {\n    setState((state) => ({ ...state, loadingUser: true }));\n\n    const subscription = notion\n      .onAuthStateChanged()\n      .subscribe((user) => {\n        setState((state) => ({\n          ...state,\n          user,\n          loadingUser: false\n        }));\n      });\n\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, []);\n\n  useEffect(() => {\n    const sub = notion.onDeviceChange().subscribe((selectedDevice) => {\n      setSelectedDevice(selectedDevice);\n      setLastSelectedDeviceId(selectedDevice.deviceId); // cache locally\n    });\n\n    return () => {\n      sub.unsubscribe();\n    };\n  }, [setSelectedDevice, setLastSelectedDeviceId]);\n\n  const logoutNotion = useCallback(() => {\n    return new Promise((resolve) => {\n      notion.logout().then(resolve);\n      setState({ ...initialState, loadingUser: false });\n    });\n  }, []);\n\n  return {\n    ...state,\n    lastSelectedDeviceId,\n    setLastSelectedDeviceId,\n    logoutNotion,\n    setSelectedDevice\n  };\n}\n","import React, { useState, useEffect } from \"react\";\nimport { navigate } from \"@reach/router\";\n\nimport { notion, useNotion } from \"../services/notion\";\n\nexport function Devices() {\n  const { user, lastSelectedDeviceId } = useNotion();\n  const [devices, setDevices] = useState([]);\n  const [draftDeviceId, setDraftDeviceId] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [submitting, setSubmitting] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  useEffect(() => {\n    if (!user || submitting) {\n      return;\n    }\n\n    setLoading(true);\n\n    notion\n      .getDevices()\n      .then((devices) => {\n        setDevices(devices);\n        if (devices.length) {\n          setDraftDeviceId(\n            lastSelectedDeviceId\n              ? lastSelectedDeviceId\n              : devices[0].deviceId\n          );\n        }\n      })\n      .catch((error) => {\n        setError(error.message);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [user, lastSelectedDeviceId, submitting]);\n\n  function onSubmit(event) {\n    event.preventDefault();\n    setSubmitting(true);\n\n    notion\n      .selectDevice((devices) =>\n        devices.find((device) => device.deviceId === draftDeviceId)\n      )\n      .then(() => {\n        navigate(\"/\");\n      })\n      .catch((error) => {\n        setError(error.message);\n      });\n  }\n\n  return (\n    <main className=\"main-container\">\n      <form className=\"card login-form\" onSubmit={onSubmit}>\n        <h3 className=\"card-heading\">Devices</h3>\n        {!!error ? <h4 className=\"card-error\">{error}</h4> : null}\n        <div className=\"row\">\n          <label>Select a Device</label>\n          <select\n            name=\"deviceSelect\"\n            value={draftDeviceId}\n            disabled={loading}\n            onChange={(e) => setDraftDeviceId(e.target.value)}\n          >\n            {devices.map((device) => (\n              <option key={device.deviceId} value={device.deviceId}>\n                {device.deviceNickname || device.modelName}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div className=\"row\">\n          <button type=\"submit\" className=\"card-btn\" disabled={loading}>\n            {loading ? \"Loading Devices...\" : \"Select\"}\n          </button>\n        </div>\n      </form>\n    </main>\n  );\n}\n","import React from \"react\";\n\nexport function Loading() {\n  return (\n    <div className=\"loading-container\">\n      <div className=\"loading-spinner\" />\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\n\nexport function LoginForm({\n  onLogin,\n  loading,\n  error,\n  footerComponent\n}) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  function onSubmit(event) {\n    event.preventDefault();\n    onLogin({ email, password });\n  }\n\n  return (\n    <form className=\"card login-form\" onSubmit={onSubmit}>\n      <h3 className=\"card-heading\">Login</h3>\n      {!!error ? <h4 className=\"card-error\">{error}</h4> : null}\n      <div className=\"row\">\n        <label>Email</label>\n        <input\n          type=\"email\"\n          value={email}\n          disabled={loading}\n          onChange={(e) => setEmail(e.target.value)}\n        />\n      </div>\n      <div className=\"row\">\n        <label>Password</label>\n        <input\n          type=\"password\"\n          value={password}\n          disabled={loading}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n      </div>\n      <div className=\"row\">\n        <button type=\"submit\" className=\"card-btn\" disabled={loading}>\n          {loading ? \"Logging in...\" : \"Login\"}\n        </button>\n      </div>\n      {footerComponent}\n    </form>\n  );\n}\n","import React from \"react\";\n\nexport function Footer() {\n  return (\n    <footer className=\"card-footer\">\n      <a\n        className=\"card-link card-footer-cta\"\n        href=\"https://github.com/neurosity/notion-react-starter\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        View source code\n      </a>\n      <div className=\"card-footer-credits\">\n        Built by{\" \"}\n        <a\n          className=\"card-link\"\n          href=\"https://neurosity.co\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Neurosity\n        </a>\n      </div>\n    </footer>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { navigate } from \"@reach/router\";\nimport useEffectOnce from \"react-use/lib/useEffectOnce\";\n\nimport { LoginForm } from \"../components/LoginForm\";\nimport { Footer } from \"../components/Footer\";\n\nimport { notion, useNotion } from \"../services/notion\";\n\nexport function Login() {\n  const { user, lastSelectedDeviceId, setSelectedDevice } = useNotion();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [isLoggingIn, setIsLoggingIn] = useState(false);\n\n  useEffectOnce(() => {\n    if (user) {\n      navigate(\"/\");\n    }\n  });\n\n  useEffect(() => {\n    if (email && password) {\n      login();\n    }\n\n    async function login() {\n      setIsLoggingIn(true);\n      const auth = await notion\n        .login({ email, password })\n        .catch((error) => {\n          setError(error.message);\n        });\n\n      if (auth) {\n        resetForm();\n\n        if (lastSelectedDeviceId) {\n          navigate(\"/\");\n        } else {\n          navigate(\"/devices\");\n        }\n      }\n      setIsLoggingIn(false);\n    }\n  }, [\n    email,\n    password,\n    setError,\n    lastSelectedDeviceId,\n    setSelectedDevice\n  ]);\n\n  function onLogin({ email, password }) {\n    if (email && password) {\n      setError(\"\");\n      setEmail(email);\n      setPassword(password);\n    } else {\n      setError(\"Please fill the form\");\n    }\n  }\n\n  function resetForm() {\n    setError(\"\");\n    setEmail(\"\");\n    setPassword(\"\");\n  }\n\n  return (\n    <main className=\"main-container\">\n      <LoginForm\n        onLogin={onLogin}\n        error={error}\n        loading={isLoggingIn}\n        footerComponent={<Footer />}\n      />\n    </main>\n  );\n}\n","import { useEffect } from \"react\";\nimport { navigate } from \"@reach/router\";\n\nimport { useNotion } from \"../services/notion\";\n\nexport function Logout() {\n  const { logoutNotion } = useNotion();\n\n  useEffect(() => {\n    logoutNotion().then(() => {\n      navigate(\"/\");\n    });\n  }, [logoutNotion]);\n\n  return null;\n}\n","import React from \"react\";\nimport { Link } from \"@reach/router\";\n\nimport { useNotion } from \"../services/notion\";\n\nconst statesLabels = {\n  booting: \"Starting OS...\",\n  shuttingOff: \"Shutting off...\",\n  updating: \"Updating OS...\",\n  online: \"Online\",\n  offline: \"Offline\"\n};\n\nconst stateColors = {\n  booting: \"darkslategrey\",\n  shuttingOff: \"darkslategrey\",\n  updating: \"orange\",\n  online: \"limegreen\",\n  offline: \"crimson\"\n};\n\nexport function Status() {\n  const { status, selectedDevice } = useNotion();\n  const { state, charging, battery, sleepMode } = status || {};\n\n  if (!status) {\n    return <div>Connecting to device...</div>;\n  }\n\n  return (\n    <aside>\n      {selectedDevice ? (\n        <h3 className=\"card-heading\">\n          <Link\n            to=\"/devices\"\n            title=\"My Devices\"\n            className=\"unstyled-link\"\n          >\n            <span role=\"img\" aria-label=\"My Devices\">\n              ⚙️\n            </span>\n            &nbsp;&nbsp;\n            {selectedDevice.deviceNickname}\n          </Link>\n        </h3>\n      ) : null}\n      <div className=\"status-item status-state\">\n        <span\n          className=\"status-indicator\"\n          style={{ background: getStatusColor(state) }}\n        ></span>\n        {state in statesLabels ? statesLabels[state] : state}\n      </div>\n      {state !== \"offline\" ? (\n        <div className=\"status-item status-battery\">\n          <ChargingIcon /> &nbsp;{charging ? \"Charging\" : \"Charged\"}\n          &nbsp;{battery}%\n        </div>\n      ) : null}\n      {sleepMode && state !== \"offline\" ? (\n        <div className=\"status-item status-sleep-mode\">\n          <SleepModeIcon /> &nbsp;Sleep mode\n        </div>\n      ) : null}\n    </aside>\n  );\n}\n\nfunction getStatusColor(state) {\n  if (state in stateColors) {\n    return stateColors[state];\n  }\n\n  return stateColors.offline;\n}\n\nfunction ChargingIcon() {\n  return (\n    <span role=\"img\" aria-label=\"Electricity\">\n      &#x26A1;\n    </span>\n  );\n}\n\nfunction SleepModeIcon() {\n  return (\n    <span role=\"img\" aria-label=\"The Moon\">\n      &#127769;\n    </span>\n  );\n}\n","import React from \"react\";\nimport { navigate } from \"@reach/router\";\n\nimport { Status } from \"./Status\";\nimport { Footer } from \"./Footer\";\n\nexport function Nav() {\n  function goToLogout() {\n    navigate(\"/logout\");\n  }\n\n  return (\n    <nav className=\"card\">\n      <Status />\n      <button onClick={goToLogout} className=\"card-btn\">\n        Logout\n      </button>\n      <Footer />\n    </nav>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { navigate } from \"@reach/router\";\n\nimport { notion, useNotion } from \"../services/notion\";\nimport { Nav } from \"../components/Nav\";\n\nexport function Calm() {\n  const { user } = useNotion();\n  const [calm, setCalm] = useState(0);\n\n  useEffect(() => {\n    if (!user) {\n      navigate(\"/login\");\n    }\n  }, [user]);\n\n  useEffect(() => {\n    if (!user) {\n      return;\n    }\n\n    const subscription = notion.calm().subscribe((calm) => {\n      const calmScore = Math.trunc(calm.probability * 100);\n      setCalm(calmScore);\n    });\n\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, [user]);\n\n  return (\n    <main className=\"main-container\">\n      {user ? <Nav /> : null}\n      <div className=\"calm-score\">\n        &nbsp;{calm}% <div className=\"calm-word\">Calm</div>\n      </div>\n    </main>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { Router, navigate } from \"@reach/router\";\n\nimport { ProvideNotion } from \"./services/notion\";\nimport { Devices } from \"./pages/Devices\";\nimport { Loading } from \"./components/Loading\";\nimport { Login } from \"./pages/Login\";\nimport { Logout } from \"./pages/Logout\";\nimport { Calm } from \"./pages/Calm\";\n\nimport { useNotion } from \"./services/notion\";\n\nexport function App() {\n  return (\n    <ProvideNotion>\n      <Routes />\n    </ProvideNotion>\n  );\n}\n\nfunction Routes() {\n  const { user, loadingUser } = useNotion();\n\n  useEffect(() => {\n    if (!loadingUser && !user) {\n      navigate(\"/login\");\n    }\n  }, [user, loadingUser]);\n\n  if (loadingUser) {\n    return <Loading />;\n  }\n\n  return (\n    <Router>\n      <Calm path=\"/\" />\n      <Devices path=\"/devices\" />\n      <Login path=\"/login\" />\n      <Logout path=\"/logout\" />\n    </Router>\n  );\n}\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport { App } from \"./App\";\nimport \"./global.css\";\n\nrender(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}